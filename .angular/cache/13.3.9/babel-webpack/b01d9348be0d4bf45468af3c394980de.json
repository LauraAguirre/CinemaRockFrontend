{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Laura Aguirre\\\\Documents\\\\Universidad\\\\Soft2\\\\cinerockFrontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RememberPasswordComponent = class RememberPasswordComponent {\n  constructor(fb, userService, router) {\n    this.fb = fb;\n    this.userService = userService;\n    this.router = router;\n    this.loading = false;\n    this.submitted = false;\n    this.movie1 = '/assets/img/movies/m2.jpg';\n    this.movie2 = '/assets/img/movies/m3.jpg';\n    this.movie3 = '/assets/img/movies/m5.jpg';\n    this.movie4 = '/assets/img/movies/m6.jpg';\n    this.movie5 = '/assets/img/movies/m7.jpg';\n    this.userProfileForm = this.fb.group({\n      //      email: new FormControl ('', {validators: [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$')]}),\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmpassword: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  ngOnInit() {}\n\n  onUpdatePassword() {\n    var _this = this;\n\n    this.loading = true;\n    this.submitted = true;\n    const newPass = JSON.parse(localStorage.getItem('user'));\n    newPass.password = this.userProfileForm.get('password');\n    newPass.confirmpassword = this.userProfileForm.get('confirmpassword');\n    this.userService.update(newPass).subscribe({\n      next: data => {\n        console.log('Aqui perfil', data);\n\n        if (data.ok) {\n          localStorage.setItem('user', JSON.stringify(data));\n          Swal.fire({\n            title: '¡Información Actualizada!',\n            text: 'Tus datos han sido actualizados',\n            icon: 'success',\n            confirmButtonColor: '#a4161a',\n            confirmButtonText: 'Aceptar'\n          }).then( /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator(function* (result) {\n              if (result.isConfirmed) {\n                _this.router.navigate(['']);\n              } else {\n                _this.router.navigate(['/profile']);\n              }\n            });\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        }\n\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error Profile', error);\n        this.loading = false;\n      }\n    });\n  }\n\n};\nRememberPasswordComponent = __decorate([Component({\n  selector: 'app-remember-password',\n  templateUrl: './remember-password.component.html',\n  styleUrls: ['./remember-password.component.css']\n})], RememberPasswordComponent);\nexport { RememberPasswordComponent };","map":{"version":3,"sources":["C:/Users/Laura Aguirre/Documents/Universidad/Soft2/cinerockFrontend/src/app/components/change-password/remember-password.component.ts"],"names":["__decorate","Component","Validators","RememberPasswordComponent","constructor","fb","userService","router","loading","submitted","movie1","movie2","movie3","movie4","movie5","userProfileForm","group","password","required","minLength","confirmpassword","ngOnInit","onUpdatePassword","newPass","JSON","parse","localStorage","getItem","get","update","subscribe","next","data","console","log","ok","setItem","stringify","Swal","fire","title","text","icon","confirmButtonColor","confirmButtonText","then","result","isConfirmed","navigate","error","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { Validators, } from '@angular/forms';\r\nlet RememberPasswordComponent = class RememberPasswordComponent {\r\n    constructor(fb, userService, router) {\r\n        this.fb = fb;\r\n        this.userService = userService;\r\n        this.router = router;\r\n        this.loading = false;\r\n        this.submitted = false;\r\n        this.movie1 = '/assets/img/movies/m2.jpg';\r\n        this.movie2 = '/assets/img/movies/m3.jpg';\r\n        this.movie3 = '/assets/img/movies/m5.jpg';\r\n        this.movie4 = '/assets/img/movies/m6.jpg';\r\n        this.movie5 = '/assets/img/movies/m7.jpg';\r\n        this.userProfileForm = this.fb.group({\r\n            //      email: new FormControl ('', {validators: [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$')]}),\r\n            password: ['', [Validators.required, Validators.minLength(6)]],\r\n            confirmpassword: ['', [Validators.required, Validators.minLength(6)]],\r\n        });\r\n    }\r\n    ngOnInit() { }\r\n    onUpdatePassword() {\r\n        this.loading = true;\r\n        this.submitted = true;\r\n        const newPass = JSON.parse(localStorage.getItem('user'));\r\n        newPass.password = this.userProfileForm.get('password');\r\n        newPass.confirmpassword = this.userProfileForm.get('confirmpassword');\r\n        this.userService.update(newPass).subscribe({\r\n            next: (data) => {\r\n                console.log('Aqui perfil', data);\r\n                if (data.ok) {\r\n                    localStorage.setItem('user', JSON.stringify(data));\r\n                    Swal.fire({\r\n                        title: '¡Información Actualizada!',\r\n                        text: 'Tus datos han sido actualizados',\r\n                        icon: 'success',\r\n                        confirmButtonColor: '#a4161a',\r\n                        confirmButtonText: 'Aceptar',\r\n                    }).then(async (result) => {\r\n                        if (result.isConfirmed) {\r\n                            this.router.navigate(['']);\r\n                        }\r\n                        else {\r\n                            this.router.navigate(['/profile']);\r\n                        }\r\n                    });\r\n                }\r\n                this.loading = false;\r\n            },\r\n            error: (error) => {\r\n                console.error('Error Profile', error);\r\n                this.loading = false;\r\n            },\r\n        });\r\n    }\r\n};\r\nRememberPasswordComponent = __decorate([\r\n    Component({\r\n        selector: 'app-remember-password',\r\n        templateUrl: './remember-password.component.html',\r\n        styleUrls: ['./remember-password.component.css'],\r\n    })\r\n], RememberPasswordComponent);\r\nexport { RememberPasswordComponent };\r\n"]},"metadata":{},"sourceType":"module"}